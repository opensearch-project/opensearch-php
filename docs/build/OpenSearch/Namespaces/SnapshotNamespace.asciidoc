

[[OpenSearch_Namespaces_SnapshotNamespace]]
=== OpenSearch\Namespaces\SnapshotNamespace



Class SnapshotNamespace


*Methods*

The class defines the following methods:

* <<OpenSearch_Namespaces_SnapshotNamespacecleanupRepository_cleanupRepository,`cleanupRepository()`>>
* <<OpenSearch_Namespaces_SnapshotNamespaceclone_clone,`clone()`>>
* <<OpenSearch_Namespaces_SnapshotNamespacecreate_create,`create()`>>
* <<OpenSearch_Namespaces_SnapshotNamespacecreateRepository_createRepository,`createRepository()`>>
* <<OpenSearch_Namespaces_SnapshotNamespacedelete_delete,`delete()`>>
* <<OpenSearch_Namespaces_SnapshotNamespacedeleteRepository_deleteRepository,`deleteRepository()`>>
* <<OpenSearch_Namespaces_SnapshotNamespaceget_get,`get()`>>
* <<OpenSearch_Namespaces_SnapshotNamespacegetRepository_getRepository,`getRepository()`>>
* <<OpenSearch_Namespaces_SnapshotNamespacerestore_restore,`restore()`>>
* <<OpenSearch_Namespaces_SnapshotNamespacestatus_status,`status()`>>
* <<OpenSearch_Namespaces_SnapshotNamespaceverifyRepository_verifyRepository,`verifyRepository()`>>



[[OpenSearch_Namespaces_SnapshotNamespacecleanupRepository_cleanupRepository]]
.`cleanupRepository(array $params = [])`
****
[source,php]
----
/*
$params['repository']     = (string) A repository name
$params['master_timeout'] = (time) Explicit operation timeout for connection to master node
$params['timeout']        = (time) Explicit operation timeout
*/
----
****



[[OpenSearch_Namespaces_SnapshotNamespaceclone_clone]]
.`clone(array $params = [])`
****
[source,php]
----
/*
$params['repository']      = (string) A repository name
$params['snapshot']        = (string) The name of the snapshot to clone from
$params['target_snapshot'] = (string) The name of the cloned snapshot to create
$params['master_timeout']  = (time) Explicit operation timeout for connection to master node
$params['body']            = (array) The snapshot clone definition (Required)
*/
----
****



[[OpenSearch_Namespaces_SnapshotNamespacecreate_create]]
.`create(array $params = [])`
****
[source,php]
----
/*
$params['repository']          = (string) A repository name
$params['snapshot']            = (string) A snapshot name
$params['master_timeout']      = (time) Explicit operation timeout for connection to master node
$params['wait_for_completion'] = (boolean) Should this request wait until the operation has completed before returning (Default = false)
$params['body']                = (array) The snapshot definition
*/
----
****



[[OpenSearch_Namespaces_SnapshotNamespacecreateRepository_createRepository]]
.`createRepository(array $params = [])`
****
[source,php]
----
/*
$params['repository']     = (string) A repository name
$params['master_timeout'] = (time) Explicit operation timeout for connection to master node
$params['timeout']        = (time) Explicit operation timeout
$params['verify']         = (boolean) Whether to verify the repository after creation
$params['body']           = (array) The repository definition (Required)
*/
----
****



[[OpenSearch_Namespaces_SnapshotNamespacedelete_delete]]
.`delete(array $params = [])`
****
[source,php]
----
/*
$params['repository']     = (string) A repository name
$params['snapshot']       = (string) A snapshot name
$params['master_timeout'] = (time) Explicit operation timeout for connection to master node
*/
----
****



[[OpenSearch_Namespaces_SnapshotNamespacedeleteRepository_deleteRepository]]
.`deleteRepository(array $params = [])`
****
[source,php]
----
/*
$params['repository']     = (list) Name of the snapshot repository to unregister. Wildcard (`*`) patterns are supported.
*/
----
****



[[OpenSearch_Namespaces_SnapshotNamespaceget_get]]
.`get(array $params = [])`
****
[source,php]
----
/*
$params['repository']         = (string) A repository name
$params['snapshot']           = (list) A comma-separated list of snapshot names
$params['master_timeout']     = (time) Explicit operation timeout for connection to master node
$params['ignore_unavailable'] = (boolean) Whether to ignore unavailable snapshots, defaults to false which means a SnapshotMissingException is thrown
$params['verbose']            = (boolean) Whether to show verbose snapshot info or only show the basic info found in the repository index blob
*/
----
****



[[OpenSearch_Namespaces_SnapshotNamespacegetRepository_getRepository]]
.`getRepository(array $params = [])`
****
[source,php]
----
/*
$params['repository']     = (list) A comma-separated list of repository names
$params['master_timeout'] = (time) Explicit operation timeout for connection to master node
$params['local']          = (boolean) Return local information, do not retrieve the state from master node (default: false)
*/
----
****



[[OpenSearch_Namespaces_SnapshotNamespacerestore_restore]]
.`restore(array $params = [])`
****
[source,php]
----
/*
$params['repository']          = (string) A repository name
$params['snapshot']            = (string) A snapshot name
$params['master_timeout']      = (time) Explicit operation timeout for connection to master node
$params['wait_for_completion'] = (boolean) Should this request wait until the operation has completed before returning (Default = false)
$params['body']                = (array) Details of what to restore
*/
----
****



[[OpenSearch_Namespaces_SnapshotNamespacestatus_status]]
.`status(array $params = [])`
****
[source,php]
----
/*
$params['repository']         = (string) A repository name
$params['snapshot']           = (list) A comma-separated list of snapshot names
$params['master_timeout']     = (time) Explicit operation timeout for connection to master node
$params['ignore_unavailable'] = (boolean) Whether to ignore unavailable snapshots, defaults to false which means a SnapshotMissingException is thrown
*/
----
****



[[OpenSearch_Namespaces_SnapshotNamespaceverifyRepository_verifyRepository]]
.`verifyRepository(array $params = [])`
****
[source,php]
----
/*
$params['repository']     = (string) A repository name
$params['master_timeout'] = (time) Explicit operation timeout for connection to master node
$params['timeout']        = (time) Explicit operation timeout
*/
----
****


